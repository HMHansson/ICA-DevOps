# ------------------------------------------------------------------------------
# Github Workflow to validate functionality using Postman Collections
#
#  - This pipeline is triggered by
#     a) Manually start this workflow (from Github actions)
#     b) commit/push bron test cases to development branch (using git client)
#     c) development commit/merge (called via workflow_call - commit-development)
#     d) test PR/merge (called via workflow_call - promote-test)
#     e) production PR/merge (called via workflow_call - promote-production)
#
# ------------------------------------------------------------------------------
name: Dev Test Case Validation
run-name: Project Test Cases
on:
  workflow_call:
    inputs:
      environment: 
        type: string
        required: false
    secrets:
      B2B_PASSWORD:
        required: true
      WMIO_PASSWORD:
        required: true      

env:
  TEST_DIR: "${{ github.workspace }}/test/TestCollection"

jobs:
  Run-Tests:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      # --------------------------------------
      # Checkout branch
      # --------------------------------------
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      # --------------------------------------
      # Run Info
      # --------------------------------------
      - name: Run Info
        run: |
          echo Repository: ${{ github.repository }}
          echo Project Name: ${{ vars.WMIO_PROJECT_NAME }}
          echo Environment: ${{ inputs.environment }}
          echo Run ID: ${{ github.run_id }}
          echo Run Number: ${{ github.run_number }} 
          echo Triggered by: ${{ github.triggering_actor }} 
          echo Github path: ${{ github.workspace }} 
          echo webMethods.io URL: https://${{ vars.WMIO_HOSTNAME }}:443
          echo webMethods.io Username: ${{ vars.WMIO_USERNAME }}
          echo Triggered by : ${{ github.event_name }}
      # --------------------------------------
      # Conditions
      # --------------------------------------
      - name: Collection exists
        run: |
          if [ ! -d "${{ env.TEST_DIR }}" ]; then
            echo No test cases found for ${{ vars.WMIO_PROJECT_NAME }} ... exiting.
            gh run cancel ${{ github.run_id }}
            gh run watch ${{ github.run_id }}
          else
            echo Test collection found for ${{ vars.WMIO_PROJECT_NAME }} ...
          fi
      # ------------------------------------------------------
      # Run Bruno Tests 
      # ------------------------------------------------------
      - name: Install Bruno CLI
        run: |
          cd ${{ env.TEST_DIR }}
          npm install @usebruno/cli -g
          npm install xml2js
      - name: Run Bruno Tests
        run: |
          cd ${{ env.TEST_DIR }}

          # ----------------------------
          #  Run collection
          # ----------------------------
          bru run --env ${{ inputs.environment }} --env-var B2B_PASSWORD=${{ secrets.B2B_PASSWORD }} --env-var WMIO_PASSWORD=${{ secrets.WMIO_PASSWORD }} --bail -f junit -o ${{ env.TEST_DIR }}/bruno-junit.xml
      - name: Publish Test Reports
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '${{ env.TEST_DIR }}/bruno-junit.xml'
